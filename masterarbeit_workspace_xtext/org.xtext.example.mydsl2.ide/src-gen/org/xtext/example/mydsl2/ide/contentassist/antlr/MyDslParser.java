/*
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl2.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl2.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl2.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Inject
	private MyDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPlacementStrategyAccess().getAlternatives(), "rule__PlacementStrategy__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getAppearanceAccess().getAlternatives(), "rule__Appearance__Alternatives");
					put(grammarAccess.getExtensionInclusionAccess().getGroup(), "rule__ExtensionInclusion__Group__0");
					put(grammarAccess.getExtensionInclusionAccess().getGroup_8(), "rule__ExtensionInclusion__Group_8__0");
					put(grammarAccess.getExtensionInclusionAccess().getGroup_8_3(), "rule__ExtensionInclusion__Group_8_3__0");
					put(grammarAccess.getExtensionInclusionAccess().getGroup_9(), "rule__ExtensionInclusion__Group_9__0");
					put(grammarAccess.getExtensionInclusionAccess().getGroup_9_3(), "rule__ExtensionInclusion__Group_9_3__0");
					put(grammarAccess.getPointCutAccess().getGroup(), "rule__PointCut__Group__0");
					put(grammarAccess.getPointCutAccess().getGroup_4(), "rule__PointCut__Group_4__0");
					put(grammarAccess.getAdviceAccess().getGroup(), "rule__Advice__Group__0");
					put(grammarAccess.getAdviceAccess().getGroup_6(), "rule__Advice__Group_6__0");
					put(grammarAccess.getAdviceAccess().getGroup_7(), "rule__Advice__Group_7__0");
					put(grammarAccess.getPlacementStrategy_ImplAccess().getGroup(), "rule__PlacementStrategy_Impl__Group__0");
					put(grammarAccess.getExternalCallPlacementStrategyAccess().getGroup(), "rule__ExternalCallPlacementStrategy__Group__0");
					put(grammarAccess.getExternalCallPlacementStrategyAccess().getGroup_3(), "rule__ExternalCallPlacementStrategy__Group_3__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getInternalActionPlacementStrategyAccess().getGroup(), "rule__InternalActionPlacementStrategy__Group__0");
					put(grammarAccess.getInternalActionPlacementStrategyAccess().getGroup_3(), "rule__InternalActionPlacementStrategy__Group_3__0");
					put(grammarAccess.getControlFlowPlacementStrategyAccess().getGroup(), "rule__ControlFlowPlacementStrategy__Group__0");
					put(grammarAccess.getControlFlowPlacementStrategyAccess().getGroup_3(), "rule__ControlFlowPlacementStrategy__Group_3__0");
					put(grammarAccess.getExtensionInclusionAccess().getMultipleAssignment_0(), "rule__ExtensionInclusion__MultipleAssignment_0");
					put(grammarAccess.getExtensionInclusionAccess().getIdAssignment_2(), "rule__ExtensionInclusion__IdAssignment_2");
					put(grammarAccess.getExtensionInclusionAccess().getNameAssignment_5(), "rule__ExtensionInclusion__NameAssignment_5");
					put(grammarAccess.getExtensionInclusionAccess().getDescriptionAssignment_7(), "rule__ExtensionInclusion__DescriptionAssignment_7");
					put(grammarAccess.getExtensionInclusionAccess().getPointCutAssignment_8_2(), "rule__ExtensionInclusion__PointCutAssignment_8_2");
					put(grammarAccess.getExtensionInclusionAccess().getPointCutAssignment_8_3_1(), "rule__ExtensionInclusion__PointCutAssignment_8_3_1");
					put(grammarAccess.getExtensionInclusionAccess().getAdviceAssignment_9_2(), "rule__ExtensionInclusion__AdviceAssignment_9_2");
					put(grammarAccess.getExtensionInclusionAccess().getAdviceAssignment_9_3_1(), "rule__ExtensionInclusion__AdviceAssignment_9_3_1");
					put(grammarAccess.getPointCutAccess().getEntityNameAssignment_3(), "rule__PointCut__EntityNameAssignment_3");
					put(grammarAccess.getPointCutAccess().getPlacementStrategyAssignment_4_1(), "rule__PointCut__PlacementStrategyAssignment_4_1");
					put(grammarAccess.getAdviceAccess().getEntityNameAssignment_3(), "rule__Advice__EntityNameAssignment_3");
					put(grammarAccess.getAdviceAccess().getAppearsAssignment_5(), "rule__Advice__AppearsAssignment_5");
					put(grammarAccess.getAdviceAccess().getPointCutAssignment_6_1(), "rule__Advice__PointCutAssignment_6_1");
					put(grammarAccess.getAdviceAccess().getCompletionAssignment_7_1(), "rule__Advice__CompletionAssignment_7_1");
					put(grammarAccess.getExternalCallPlacementStrategyAccess().getMatchingSignatureAssignment_3_1(), "rule__ExternalCallPlacementStrategy__MatchingSignatureAssignment_3_1");
					put(grammarAccess.getInternalActionPlacementStrategyAccess().getForAllInternalActionsInAssignment_3_1(), "rule__InternalActionPlacementStrategy__ForAllInternalActionsInAssignment_3_1");
					put(grammarAccess.getControlFlowPlacementStrategyAccess().getForAllControlFlowsInAssignment_3_1(), "rule__ControlFlowPlacementStrategy__ForAllControlFlowsInAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
